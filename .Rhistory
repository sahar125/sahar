}else if(input$var=="mucite"){
ggplot(base,  aes(x = factor(""), fill = mucite ) ) +
geom_bar()
}else if(input$var=="mucite_grade3_ou_4"){
ggplot(base,  aes(x = factor(""), fill =mucite_grade3_ou_4  ) ) +
geom_bar()
}else if(input$var=="MAT"){
ggplot(base,  aes(x = factor(""), fill = MAT ) ) +
geom_bar()
}else if(input$var=="SAM"){
ggplot(base,  aes(x = factor(""), fill = SAM ) ) +
geom_bar()
}else if(input$var=="MVO"){
ggplot(base,  aes(x = factor(""), fill = MVO ) ) +
geom_bar()
}else if(input$var=="TRM"){
ggplot(base,  aes(x = factor(""), fill = TRM ) ) +
geom_bar()
}else if(input$var=="GVHaigu_supou?gal?2"){
ggplot(base,  aes(x = factor(""), fill = GVHaigu_supou?gal?2 ) ) +
geom_bar()
}else if(input$var=="infections_cliniquement_document?s"){
ggplot(base, aes( infections_cliniquement_document?s, fill =  infections_cliniquement_document?s) ) +
geom_bar()
}else if(input$var=="infections_microbiologiquement_document?es"){
ggplot(base, aes( insuffisance_r?nale, fill =  insuffisance_r?nale) ) +
geom_bar()
}else if(input$var=="rechute_?_J100"){
ggplot(base, aes( rechute_?_J100, fill =  rechute_?_J100) ) +
geom_bar()
}else {
ggplot(base, aes( hepatopathie, fill =  hepatopathie) ) +
geom_bar()
}
})
output$graph2 <- renderPlot({
if(input$var=="antibioth?rapie"){
boxplot(antibioth?rapie,col="lightblue")
}else if(input$var=="Age"){
boxplot(Age,col="pink")
}else if(input$var=="IMC"){
boxplot(IMC,col="lightgray")
}else if(input$var=="caract?ristiq_greffon_CMN"){
boxplot(caract?ristiq_greffon_CMN,col="#CC9999")
}else if(input$var=="dur?e_aplasie"){
boxplot(dur?e_aplasie,col="blue")
}else if(input$var=="Nombre.de.jours.de.fi?vre"){
boxplot(Nombre.de.jours.de.fi?vre,col="purple")
}else if(input$var=="Dur?e.de.l.hospitalisation"){
boxplot(Dur?e.de.l.hospitalisation,col="red")
}else if(input$var=="cout_Filgrastim"){
boxplot(cout_Filgrastim,col="#0099CC" )
}else if(input$var==" COUT_TOTAL"){
boxplot(COUT_TOTAL,col="#FFCC66")
}else if(input$var=="dur?e_mucite"){
boxplot(dur?e_mucite,col="#CCCCCC")
} else if(input$var=="nb_jours_filgrastim"){
boxplot(nb_jours_filgrastim,col="#66FF00")
}else if(input$var=="Groupes"){
ggplot(base, aes(Groupes, fill = Groupes ) ) +
geom_bar()
}else if(input$var=="statut_CMV"){
ggplot(base, aes(statut_CMV, fill = statut_CMV) ) +
geom_bar()
}else if(input$var=="diagnostic_binaire"){
ggplot(base, aes(diagnostic_binaire, fill = diagnostic_binaire) ) +
geom_bar()
}else if(input$var=="Diagnostic"){
ggplot(base, aes(Diagnostic, fill = Diagnostic) ) +
geom_bar()
}else if(input$var=="Statut.pr?.greffe"){
ggplot(base, aes(Statut.pr?.greffe, fill = Statut.pr?.greffe) ) +
geom_bar()
}else if(input$var==" Mismatch.de.sexe"){
ggplot(base, aes(Mismatch.de.sexe, fill = Mismatch.de.sexe) ) +
geom_bar()
}else if(input$var=="IBOMPATIBILITE_ABO_binaire"){
ggplot(base, aes(IBOMPATIBILITE_ABO_binaire, fill = IBOMPATIBILITE_ABO_binaire) ) +
geom_bar()
}else if(input$var=="Incompatibilit?.ABO"){
ggplot(base, aes(Incompatibilit?.ABO, fill = Incompatibilit?.ABO) ) +
geom_bar()
}else if(input$var=="ProphylaxieGVH"){
ggplot(base, aes(ProphylaxieGVH, fill = ProphylaxieGVH) ) +
geom_bar()
}else if(input$var=="status"){
ggplot(base, aes(status, fill = status) ) +
geom_bar()
}else if(input$var=="statut_survie100j"){
ggplot(base, aes(statut_survie100j, fill = statut_survie100j) ) +
geom_bar()
}else if(input$var=="reac_ou_acti_CMV"){
ggplot(base, aes(reac_ou_acti_CMV, fill = reac_ou_acti_CMV) ) +
geom_bar()
}else if(input$var=="mucite"){
ggplot(base, aes(mucite , fill = mucite ) ) +
geom_bar()
}else if(input$var=="mucite_grade3_ou_4"){
ggplot(base, aes(mucite_grade3_ou_4, fill = mucite_grade3_ou_4) ) +
geom_bar()
}else if(input$var=="MAT"){
ggplot(base, aes( MAT, fill =  MAT) ) +
geom_bar()
}else if(input$var=="SAM"){
ggplot(base, aes(SAM, fill =  SAM) ) +
geom_bar()
}else if(input$var=="MVO"){
ggplot(base, aes( MVO, fill =  MVO) ) +
geom_bar()
}else if(input$var=="TRM"){
ggplot(base, aes( TRM, fill =  TRM) ) +
geom_bar()
}else if(input$var=="GVHaigu_supou?gal?2"){
ggplot(base, aes( GVHaigu_supou?gal?2, fill =  GVHaigu_supou?gal?2) ) +
geom_bar()
}
})
output$graph3 <-renderPlot({
if(input$var1=="co?t total / groupes"){
ggplot(base, aes(Groupes, COUT_TOTAL) ) +
geom_point()
}else if(input$var1=="co?t total / antibioth?rapie"){
ggplot(base, aes(COUT_TOTAL, antibioth?rapie)) +
geom_hex()
}else if(input$var1=="groupes / age"){
ggplot(base, aes(Groupes, Age)) +
geom_hex()
}else if(input$var1=="co?t anti infectieux / co?t biologie"){
ggplot(base, aes(cout_anti_infectieux,cout_biologie) ) +
geom_point( aes(shape=Groupes ) )}
})
output$resM <-renderPrint({
library(readxl)
bd <- read_excel("~/base donn?es filgrastimvaleurrrr 5.xlsx")
View(bd)
attach(bd)
normalize <- function(x){
return((x- min(x))/(max(x)-min(x)))
}
normalize(COUT_TOTAL)
if(input$mod=="bras Filgrastim"){
f<-bd[which(bd$Groupes=="1"),]
View(f)
modelf<- glm(f$COUT_TOTAL~f$reac_ou_acti_CMV+f$mucite+f$grade_mucite+f$dur?e_mucite+f$mucite_grade3_ou_4+f$MAT+f$SAM+f$MVO+f$TRM+f$GVHaigu_supou?gal?2+f$infections_cliniquement_document?s+f$infections_microbiologiquement_document?es+f$insuffisance_r?nale+f$rechute_?_J100+f$hepatopathie)
summary(modelf)
anova(modelf,test="F")
}else if(input$mod=="bras Placebo"){
pl<-bd[which(bd$Groupes=="0"),]
View(pl)
modelpl<- glm(pl$COUT_TOTAL~pl$reac_ou_acti_CMV+pl$mucite+pl$grade_mucite+pl$dur?e_mucite+pl$mucite_grade3_ou_4+pl$MAT+pl$SAM+pl$MVO+pl$TRM+pl$GVHaigu_supou?gal?2+pl$infections_cliniquement_document?s+pl$infections_microbiologiquement_document?es+pl$insuffisance_r?nale+pl$rechute_?_J100+pl$hepatopathie)
summary(modelpl)
anova(modelpl,test="F")
}
})
output$roc <-renderPrint({
icer<-function(x,y){
rsl<-( mean(f$COUT_TOTAL)-mean(pl$COUT_TOTAL))/(x-y)
rsl
}
xhosp<-mean(f$Dur?e.de.l.hospitalisation)
yhosp<-mean(pl$Dur?e.de.l.hospitalisation)
xapl<-mean(f$dur?e_aplasie)
yapl<-mean(pl$dur?e_aplasie)
xant<-mean(f$antibioth?rapie)
yant<-mean(pl$antibioth?rapie)
if(input$mod1=="ICER des effets ? ?viter"){
print("aplasie")
icer(xapl,yapl)
print("hospitalisation:" )
icer(xhosp,yhosp)
print("fi?vre:")
print("antibioth?rapie")
icer(xant,yant)
}else{
print("survie ? 100 jours:",icer(xapl,yapl))
}
})
}
library(readxl)
shinyApp(ui, server)
runApp('C:/Users/dell/Desktop/sahar2')
## app.R ##
library(shiny)
library(shinydashboard)
require(shinydashboard)
library(lattice)
library(Matrix)
library(ggplot2)
library(plotrix)
library(psych)
library(survival)
library(caret)
library(rpart)
library(Formula)
library(base)
library(Hmisc)
library(stats)
library(randomForest)
library(ROCR)
library(readxl)
library(readxl)
base <- read_excel("C:/Users/dell/Desktop/base.xlsx")
base1 <- read_excel("C:/Users/dell/Desktop/base1.xlsx")
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Analyse Univari?e", tabName = 'au',icon = icon("binoculars")),
menuItem("Analyse Bivari?e",tabName = "ab",icon = icon("th")) ,
menuItem("Mod?lisation",tabName = "Mod",icon = icon("th"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "au",
fluidRow(box(title = "Variable",collapsible = T,status = "primary",width = 3,
selectInput("var","Choisir la variable",choices = colnames(base),selected = "Groupes")),
box("Repr?sentation des variables",collapsible = T,status="primary",width = 9,
plotOutput("graph"),
plotOutput("graph2"))
)
),
tabItem(tabName = "ab",
fluidRow(box(title = "Repr?sentation",collapsible = T,status = "primary",width = 12,
radioButtons("var1","Choisir les variables",choices = c("co?t total / groupes","co?t total / antibioth?rapie","groupes / age","co?t anti infectieux / co?t biologie"),selected = "co?t total / groupes")),
box("Repr?sentation des variables",collapsible = T,status="primary",width = 9,  plotOutput("graph3")  ))
),
tabItem(tabName = "Mod",
tabsetPanel(
tabPanel("co?t/complications",
fluidRow(box(title = "",status = "primary",width = 3,
selectInput("mod","Choisir le bras",choices = c("bras Filgrastim","bras Placebo"),selected = "bras Filgrastim")
),
box(title = "Modele",status = "primary",verbatimTextOutput("resM"))
)
),
tabPanel("Co?t/efficacit?",
fluidRow(box(title = "",status = "primary",width = 3,
selectInput("mod1","ICER",choices = c("ICER des effets ? ?viter","ICER des effets ? gagner"),selected = "ICER des effets ? ?viter")
),
box(title = "Modele",status = "primary",verbatimTextOutput("roc"))
)
)
)
))))
server <- function(input, output) {
output$graph <- renderPlot({
if(input$var=="antibioth?rapie"){
ggplot(base, aes(antibioth?rapie) ) +
geom_histogram(color="grey",fill = "lightblue") + ggtitle("Distribution du nombre de jours de l'antibioth?rapie") +
xlab("Antibioth?rapie") + ylab("Fr?quence")
}else if(input$var=="Age"){
ggplot(base, aes( Age) ) +
geom_histogram(color="grey",fill = "pink") + ggtitle("Distribution d'age") +
xlab("Age") + ylab("Fr?quence")
}else if(input$var=="IMC"){
ggplot(base, aes( IMC) ) +
geom_histogram(color="grey",fill = "lightgray") + ggtitle("Distrubtion de l'IMC") +
xlab("IMC") + ylab("Fr?quence")
}else if(input$var=="caract?ristiq_greffon_CMN"){
ggplot(base, aes( caract?ristiq_greffon_CMN) ) +
geom_histogram(color="grey",fill = "#CC9999")  +
xlab("Caract?ristique_greffon") + ylab("Fr?quence")
}else if(input$var=="dur?e_aplasie"){
ggplot(base, aes(  dur?e_aplasie) ) +
geom_histogram(color="grey",fill = "blue") + ggtitle("Distribution de la dur?e de l'aplasie") +
xlab("Dur?e de l'aplasie") + ylab("Fr?quence")
}else if(input$var=="Nombre.de.jours.de.fi?vre"){
ggplot(base, aes( Nombre.de.jours.de.fi?vre) ) +
geom_histogram(color="grey",fill = "purple") + ggtitle("distribution de nombres de jours de fi?vre") +
xlab("Nombre de jours de fi?vre") + ylab("Fr?quence")
}else if(input$var=="Dur?e.de.l.hospitalisation"){
ggplot(base, aes( Dur?e.de.l.hospitalisation) ) +
geom_histogram(color="grey",fill = "red") + ggtitle("distribution de la dur?e d'hospitalisation") +
xlab("Dur?e de l'hospitalisation") + ylab("Fr?quence")
}else if(input$var=="cout_Filgrastim"){
ggplot(base, aes( cout_Filgrastim) ) +
geom_histogram(color="grey",fill = "#0099CC") + ggtitle("distribution de co?t de filgrastim") +
xlab("Co?t de Filgrastim") + ylab("Fr?quence")
}else if(input$var=="COUT_TOTAL"){
ggplot(base, aes( COUT_TOTAL) ) +
geom_histogram(color="grey",fill = "#FFCC66") + ggtitle("distribution du co?t total") +
xlab("Co?t total") + ylab("Fr?quence")
}else if(input$var=="dur?e_mucite"){
ggplot(base, aes( dur?e_mucite) ) +
geom_histogram(color="grey",fill = "#CCCCCC") + ggtitle("distribution de la dur?e de mucite") +
xlab("dur?e de mucite") + ylab("Fr?quence")
} else if(input$var=="nb_jours_filgrastim"){
ggplot(bd, aes( nb_jours_filgrastim) ) +
geom_histogram(color="grey",fill = "#66FF00")  + ggtitle("distribution de nombre de jours de filgrastim") +
xlab("nb_jours_filgrastim") + ylab("Fr?quence")
}else if(input$var=="Groupes"){
ggplot(base,  aes(x = factor(""), fill = Groupes) ) +
geom_bar()
}else if(input$var=="statut_CMV"){
ggplot(base,  aes(x = factor(""), fill = statut_CMV) ) +
geom_bar()
}else if(input$var=="diagnostic_binaire"){
ggplot(base,  aes(x = factor(""), fill = diagnostic_binaire ) ) +
geom_bar()
}else if(input$var=="Diagnostic"){
ggplot(base,  aes(x = factor(""), fill = Diagnostic) ) +
geom_bar()
}else if(input$var=="Statut.pr?.greffe"){
ggplot(base,  aes(x = factor(""), fill = Statut.pr?.greffe) ) +
geom_bar()
}else if(input$var=="Mismatch.de.sexe"){
ggplot(base,  aes(x = factor(""), fill = Mismatch.de.sexe) ) +
geom_bar()
}else if(input$var=="IBOMPATIBILITE_ABO_binaire"){
ggplot(base,  aes(x = factor(""), fill = IBOMPATIBILITE_ABO_binaire) ) +
geom_bar()
}else if(input$var=="Incompatibilit?.ABO"){
ggplot(base,  aes(x = factor(""), fill = Incompatibilit?.ABO) ) +
geom_bar()
}else if(input$var=="ProphylaxieGVH"){
ggplot(base,  aes(x = factor(""), fill =ProphylaxieGVH) ) +
geom_bar()
}else if(input$var=="status"){
ggplot(base,  aes(x = factor(""), fill =status ) ) +
geom_bar()
}else if(input$var=="statut_survie100j"){
ggplot(base,  aes(x = factor(""), fill =statut_survie100j) ) +ggtitle("statut de non survie")+
geom_bar()
}else if(input$var=="reac_ou_acti_CMV "){
ggplot(base,  aes(x = factor(""), fill =reac_ou_acti_CMV ) ) +
geom_bar()
}else if(input$var=="mucite"){
ggplot(base,  aes(x = factor(""), fill = mucite ) ) +
geom_bar()
}else if(input$var=="mucite_grade3_ou_4"){
ggplot(base,  aes(x = factor(""), fill =mucite_grade3_ou_4  ) ) +
geom_bar()
}else if(input$var=="MAT"){
ggplot(base,  aes(x = factor(""), fill = MAT ) ) +
geom_bar()
}else if(input$var=="SAM"){
ggplot(base,  aes(x = factor(""), fill = SAM ) ) +
geom_bar()
}else if(input$var=="MVO"){
ggplot(base,  aes(x = factor(""), fill = MVO ) ) +
geom_bar()
}else if(input$var=="TRM"){
ggplot(base,  aes(x = factor(""), fill = TRM ) ) +
geom_bar()
}else if(input$var=="GVHaigu_supou?gal?2"){
ggplot(base,  aes(x = factor(""), fill = GVHaigu_supou?gal?2 ) ) +
geom_bar()
}else if(input$var=="infections_cliniquement_document?s"){
ggplot(base, aes( infections_cliniquement_document?s, fill =  infections_cliniquement_document?s) ) +
geom_bar()
}else if(input$var=="infections_microbiologiquement_document?es"){
ggplot(base, aes( insuffisance_r?nale, fill =  insuffisance_r?nale) ) +
geom_bar()
}else if(input$var=="rechute_?_J100"){
ggplot(base, aes( rechute_?_J100, fill =  rechute_?_J100) ) +
geom_bar()
}else {
ggplot(base, aes( hepatopathie, fill =  hepatopathie) ) +
geom_bar()
}
})
output$graph2 <- renderPlot({
if(input$var=="antibioth?rapie"){
boxplot(antibioth?rapie,col="lightblue")
}else if(input$var=="Age"){
boxplot(Age,col="pink")
}else if(input$var=="IMC"){
boxplot(IMC,col="lightgray")
}else if(input$var=="caract?ristiq_greffon_CMN"){
boxplot(caract?ristiq_greffon_CMN,col="#CC9999")
}else if(input$var=="dur?e_aplasie"){
boxplot(dur?e_aplasie,col="blue")
}else if(input$var=="Nombre.de.jours.de.fi?vre"){
boxplot(Nombre.de.jours.de.fi?vre,col="purple")
}else if(input$var=="Dur?e.de.l.hospitalisation"){
boxplot(Dur?e.de.l.hospitalisation,col="red")
}else if(input$var=="cout_Filgrastim"){
boxplot(cout_Filgrastim,col="#0099CC" )
}else if(input$var==" COUT_TOTAL"){
boxplot(COUT_TOTAL,col="#FFCC66")
}else if(input$var=="dur?e_mucite"){
boxplot(dur?e_mucite,col="#CCCCCC")
} else if(input$var=="nb_jours_filgrastim"){
boxplot(nb_jours_filgrastim,col="#66FF00")
}else if(input$var=="Groupes"){
ggplot(base, aes(Groupes, fill = Groupes ) ) +
geom_bar()
}else if(input$var=="statut_CMV"){
ggplot(base, aes(statut_CMV, fill = statut_CMV) ) +
geom_bar()
}else if(input$var=="diagnostic_binaire"){
ggplot(base, aes(diagnostic_binaire, fill = diagnostic_binaire) ) +
geom_bar()
}else if(input$var=="Diagnostic"){
ggplot(base, aes(Diagnostic, fill = Diagnostic) ) +
geom_bar()
}else if(input$var=="Statut.pr?.greffe"){
ggplot(base, aes(Statut.pr?.greffe, fill = Statut.pr?.greffe) ) +
geom_bar()
}else if(input$var==" Mismatch.de.sexe"){
ggplot(base, aes(Mismatch.de.sexe, fill = Mismatch.de.sexe) ) +
geom_bar()
}else if(input$var=="IBOMPATIBILITE_ABO_binaire"){
ggplot(base, aes(IBOMPATIBILITE_ABO_binaire, fill = IBOMPATIBILITE_ABO_binaire) ) +
geom_bar()
}else if(input$var=="Incompatibilit?.ABO"){
ggplot(base, aes(Incompatibilit?.ABO, fill = Incompatibilit?.ABO) ) +
geom_bar()
}else if(input$var=="ProphylaxieGVH"){
ggplot(base, aes(ProphylaxieGVH, fill = ProphylaxieGVH) ) +
geom_bar()
}else if(input$var=="status"){
ggplot(base, aes(status, fill = status) ) +
geom_bar()
}else if(input$var=="statut_survie100j"){
ggplot(base, aes(statut_survie100j, fill = statut_survie100j) ) +
geom_bar()
}else if(input$var=="reac_ou_acti_CMV"){
ggplot(base, aes(reac_ou_acti_CMV, fill = reac_ou_acti_CMV) ) +
geom_bar()
}else if(input$var=="mucite"){
ggplot(base, aes(mucite , fill = mucite ) ) +
geom_bar()
}else if(input$var=="mucite_grade3_ou_4"){
ggplot(base, aes(mucite_grade3_ou_4, fill = mucite_grade3_ou_4) ) +
geom_bar()
}else if(input$var=="MAT"){
ggplot(base, aes( MAT, fill =  MAT) ) +
geom_bar()
}else if(input$var=="SAM"){
ggplot(base, aes(SAM, fill =  SAM) ) +
geom_bar()
}else if(input$var=="MVO"){
ggplot(base, aes( MVO, fill =  MVO) ) +
geom_bar()
}else if(input$var=="TRM"){
ggplot(base, aes( TRM, fill =  TRM) ) +
geom_bar()
}else if(input$var=="GVHaigu_supou?gal?2"){
ggplot(base, aes( GVHaigu_supou?gal?2, fill =  GVHaigu_supou?gal?2) ) +
geom_bar()
}
})
output$graph3 <-renderPlot({
if(input$var1=="co?t total / groupes"){
ggplot(base, aes(Groupes, COUT_TOTAL) ) +
geom_point()
}else if(input$var1=="co?t total / antibioth?rapie"){
ggplot(base, aes(COUT_TOTAL, antibioth?rapie)) +
geom_hex()
}else if(input$var1=="groupes / age"){
ggplot(base, aes(Groupes, Age)) +
geom_hex()
}else if(input$var1=="co?t anti infectieux / co?t biologie"){
ggplot(base, aes(cout_anti_infectieux,cout_biologie) ) +
geom_point( aes(shape=Groupes ) )}
})
output$resM <-renderPrint({
library(readxl)
bd <- read_excel("~/base donn?es filgrastimvaleurrrr 5.xlsx")
View(bd)
attach(bd)
normalize <- function(x){
return((x- min(x))/(max(x)-min(x)))
}
normalize(COUT_TOTAL)
if(input$mod=="bras Filgrastim"){
f<-bd[which(bd$Groupes=="1"),]
View(f)
modelf<- glm(f$COUT_TOTAL~f$reac_ou_acti_CMV+f$mucite+f$grade_mucite+f$dur?e_mucite+f$mucite_grade3_ou_4+f$MAT+f$SAM+f$MVO+f$TRM+f$GVHaigu_supou?gal?2+f$infections_cliniquement_document?s+f$infections_microbiologiquement_document?es+f$insuffisance_r?nale+f$rechute_?_J100+f$hepatopathie)
summary(modelf)
anova(modelf,test="F")
}else if(input$mod=="bras Placebo"){
pl<-bd[which(bd$Groupes=="0"),]
View(pl)
modelpl<- glm(pl$COUT_TOTAL~pl$reac_ou_acti_CMV+pl$mucite+pl$grade_mucite+pl$dur?e_mucite+pl$mucite_grade3_ou_4+pl$MAT+pl$SAM+pl$MVO+pl$TRM+pl$GVHaigu_supou?gal?2+pl$infections_cliniquement_document?s+pl$infections_microbiologiquement_document?es+pl$insuffisance_r?nale+pl$rechute_?_J100+pl$hepatopathie)
summary(modelpl)
anova(modelpl,test="F")
}
})
output$roc <-renderPrint({
icer<-function(x,y){
rsl<-( mean(f$COUT_TOTAL)-mean(pl$COUT_TOTAL))/(x-y)
rsl
}
xhosp<-mean(f$Dur?e.de.l.hospitalisation)
yhosp<-mean(pl$Dur?e.de.l.hospitalisation)
xapl<-mean(f$dur?e_aplasie)
yapl<-mean(pl$dur?e_aplasie)
xant<-mean(f$antibioth?rapie)
yant<-mean(pl$antibioth?rapie)
if(input$mod1=="ICER des effets ? ?viter"){
print("aplasie")
icer(xapl,yapl)
print("hospitalisation:" )
icer(xhosp,yhosp)
print("fi?vre:")
print("antibioth?rapie")
icer(xant,yant)
}else{
print("survie ? 100 jours:",icer(xapl,yapl))
}
})
}
shinyApp(ui, server)
runApp('app1')
runApp('app1')
shiny::runApp('app1')
runApp('app1')
install.packages('rsconnect')
install.packages("rsconnect")
